{{/* crypto */}}
{{- include "corda-lib.corda.cluster-ip-service" (dict "worker" "crypto") }}
{{- include "corda.worker" ( list $ .Values.workers.crypto "crypto"
  ( dict "clusterDbAccess" true "additionalWorkerArgs" ( list "--hsm-id=SOFT" ) )
) }}

{{/* db */}}
{{- include "corda-lib.corda.cluster-ip-service" (dict "worker" "db") }}
{{- include "corda.worker" ( list $ .Values.workers.db "db"
  ( dict "clusterDbAccess" true )
) }}
{{- include "corda.worker" ( list $ .Values.workers.flow "flow"
  ( dict "stateManagerDbAccess" true "servicesAccessed" (list "crypto" "verification" "uniqueness" "persistence") )
) }}

{{/* flowMapper */}}
{{- include "corda-lib.corda.cluster-ip-service" (dict "worker" "flowMapper") }}
{{- include "corda.worker" ( list $ .Values.workers.flowMapper "flowMapper" ) }}

{{/* verification */}}
{{- include "corda-lib.corda.cluster-ip-service" (dict "worker" "verification") }}
{{- include "corda.worker" ( list $ .Values.workers.verification "verification" ) }}

{{/* membership */}}
{{- include "corda-lib.corda.cluster-ip-service" (dict "worker" "membership") }}
{{- include "corda.worker" ( list $ .Values.workers.membership "membership" ) }}

{{/* p2pGateway */}}
{{- include "corda-lib.corda.cluster-ip-service" (dict "worker" "p2pGateway") }}
{{- include "corda.worker" ( list $ .Values.workers.p2pGateway "p2pGateway"
  ( dict "httpPort" 8080 )
) }}

{{/* p2pLinkManager */}}
{{- include "corda-lib.corda.cluster-ip-service" (dict "worker" "p2pLinkManager") }}
{{- include "corda.worker" ( list $ .Values.workers.p2pLinkManager "p2pLinkManager" ) }}

{{/* persistence */}}
{{- include "corda-lib.corda.cluster-ip-service" (dict "worker" "persistence") }}
{{- include "corda.worker" ( list $ .Values.workers.persistence "persistence"
    ( dict "clusterDbAccess" true )
  ) }}

{{/* rest */}}
{{- include "corda-lib.corda.cluster-ip-service" (dict "worker" "rest") }}
{{- include "corda.worker" ( list $ .Values.workers.rest "rest"
  ( dict "httpPort" 8888 "tlsSecretName" ( include "corda.restTlsSecretName" $ ) "additionalWorkerArgs" ( list "-rtls.crt.path=/tls/tls.crt" "-rtls.key.path=/tls/tls.key" "-rtls.ca.crt.path=/tls/ca.crt"  ) )
) }}

{{/* uniqueness */}}
{{- include "corda-lib.corda.cluster-ip-service" (dict "worker" "uniqueness") }}
{{- include "corda.worker" ( list $ .Values.workers.uniqueness "uniqueness"
  ( dict "clusterDbAccess" true )
) }}
